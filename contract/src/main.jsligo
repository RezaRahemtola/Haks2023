type Association = {
  claimable: tez,
  stakedAmount: tez,
  name: string,
};

type storage = {
  donators: map<address, map<address, tez>>,
  associations: map<address, Association>,
  totalFees: tez,
  totalStaked: tez,
  feePercentage: nat,
  feeAddress: address,
  bakerAddress: address,
};

type empty_param = {
  empty: int;
};

type parameter = ["Empty1", empty_param] | ["Empty2", empty_param];

type return_ = [list<operation>, storage];

const empty = (_params: empty_param, store: storage): return_ => {
  return [
    list([]), {...store}
  ];
};

const main = (action: parameter, store: storage) : return_ => {
  return match (action, {
        Empty1: (p: empty_param) => empty(p, store),
        Empty2: (p: empty_param) => empty(p, store)
    });
};



// type storage = {
//   donators: Map.empty,
//   associations: Map.empty,,
//   totalFees: 0,
//   totalStaked: 0,
//   feePercentage: 0,
//   feeAddress: 0,
//   bakerAddress: 0,
// };
